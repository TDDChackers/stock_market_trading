#ifndef _CkFtp2_W_H
#define _CkFtp2_W_H
#include "Chilkat_C.h"

HCkFtp2W CkFtp2W_Create(void);
void CkFtp2W_Dispose(HCkFtp2W handle);
void CkFtp2W_getAccount(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putAccount(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getActivePortRangeEnd(HCkFtp2W cHandle);
void CkFtp2W_putActivePortRangeEnd(HCkFtp2W cHandle, long newVal);
long CkFtp2W_getActivePortRangeStart(HCkFtp2W cHandle);
void CkFtp2W_putActivePortRangeStart(HCkFtp2W cHandle, long newVal);
unsigned long CkFtp2W_getAllocateSize(HCkFtp2W cHandle);
void CkFtp2W_putAllocateSize(HCkFtp2W cHandle, unsigned long newVal);
unsigned long CkFtp2W_getAsyncBytesReceived(HCkFtp2W cHandle);
unsigned long CkFtp2W_getAsyncBytesSent(HCkFtp2W cHandle);
BOOL CkFtp2W_getAsyncFinished(HCkFtp2W cHandle);
void CkFtp2W_getAsyncLog(HCkFtp2W cHandle, HCkStringW retval);
BOOL CkFtp2W_getAsyncSuccess(HCkFtp2W cHandle);
BOOL CkFtp2W_getAuthSsl(HCkFtp2W cHandle);
void CkFtp2W_putAuthSsl(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getAuthTls(HCkFtp2W cHandle);
void CkFtp2W_putAuthTls(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getAutoFeat(HCkFtp2W cHandle);
void CkFtp2W_putAutoFeat(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getAutoFix(HCkFtp2W cHandle);
void CkFtp2W_putAutoFix(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getAutoGetSizeForProgress(HCkFtp2W cHandle);
void CkFtp2W_putAutoGetSizeForProgress(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getAutoSyst(HCkFtp2W cHandle);
void CkFtp2W_putAutoSyst(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getAutoXcrc(HCkFtp2W cHandle);
void CkFtp2W_putAutoXcrc(HCkFtp2W cHandle, BOOL newVal);
long CkFtp2W_getBandwidthThrottleDown(HCkFtp2W cHandle);
void CkFtp2W_putBandwidthThrottleDown(HCkFtp2W cHandle, long newVal);
long CkFtp2W_getBandwidthThrottleUp(HCkFtp2W cHandle);
void CkFtp2W_putBandwidthThrottleUp(HCkFtp2W cHandle, long newVal);
void CkFtp2W_getClientIpAddress(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putClientIpAddress(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getConnectFailReason(HCkFtp2W cHandle);
long CkFtp2W_getConnectTimeout(HCkFtp2W cHandle);
void CkFtp2W_putConnectTimeout(HCkFtp2W cHandle, long newVal);
BOOL CkFtp2W_getConnectVerified(HCkFtp2W cHandle);
long CkFtp2W_getCrlfMode(HCkFtp2W cHandle);
void CkFtp2W_putCrlfMode(HCkFtp2W cHandle, long newVal);
void CkFtp2W_getDebugLogFilePath(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putDebugLogFilePath(HCkFtp2W cHandle, const wchar_t *newVal);
void CkFtp2W_getDirListingCharset(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putDirListingCharset(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getDownloadRate(HCkFtp2W cHandle);
HCkFtpProgressW CkFtp2W_getEventCallbackObject(HCkFtp2W cHandle);
void CkFtp2W_putEventCallbackObject(HCkFtp2W cHandle, HCkFtpProgressW newVal);
void CkFtp2W_getForcePortIpAddress(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putForcePortIpAddress(HCkFtp2W cHandle, const wchar_t *newVal);
void CkFtp2W_getGreeting(HCkFtp2W cHandle, HCkStringW retval);
BOOL CkFtp2W_getHasModeZ(HCkFtp2W cHandle);
long CkFtp2W_getHeartbeatMs(HCkFtp2W cHandle);
void CkFtp2W_putHeartbeatMs(HCkFtp2W cHandle, long newVal);
void CkFtp2W_getHostname(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putHostname(HCkFtp2W cHandle, const wchar_t *newVal);
void CkFtp2W_getHttpProxyAuthMethod(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putHttpProxyAuthMethod(HCkFtp2W cHandle, const wchar_t *newVal);
void CkFtp2W_getHttpProxyDomain(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putHttpProxyDomain(HCkFtp2W cHandle, const wchar_t *newVal);
void CkFtp2W_getHttpProxyHostname(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putHttpProxyHostname(HCkFtp2W cHandle, const wchar_t *newVal);
void CkFtp2W_getHttpProxyPassword(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putHttpProxyPassword(HCkFtp2W cHandle, const wchar_t *newVal);
int CkFtp2W_getHttpProxyPort(HCkFtp2W cHandle);
void CkFtp2W_putHttpProxyPort(HCkFtp2W cHandle, int newVal);
void CkFtp2W_getHttpProxyUsername(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putHttpProxyUsername(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getIdleTimeoutMs(HCkFtp2W cHandle);
void CkFtp2W_putIdleTimeoutMs(HCkFtp2W cHandle, long newVal);
BOOL CkFtp2W_getIsConnected(HCkFtp2W cHandle);
BOOL CkFtp2W_getKeepSessionLog(HCkFtp2W cHandle);
void CkFtp2W_putKeepSessionLog(HCkFtp2W cHandle, BOOL newVal);
void CkFtp2W_getLastErrorHtml(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_getLastErrorText(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_getLastErrorXml(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_getListPattern(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putListPattern(HCkFtp2W cHandle, const wchar_t *newVal);
BOOL CkFtp2W_getLoginVerified(HCkFtp2W cHandle);
long CkFtp2W_getNumFilesAndDirs(HCkFtp2W cHandle);
BOOL CkFtp2W_getPartialTransfer(HCkFtp2W cHandle);
BOOL CkFtp2W_getPassive(HCkFtp2W cHandle);
void CkFtp2W_putPassive(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getPassiveUseHostAddr(HCkFtp2W cHandle);
void CkFtp2W_putPassiveUseHostAddr(HCkFtp2W cHandle, BOOL newVal);
void CkFtp2W_getPassword(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putPassword(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getPort(HCkFtp2W cHandle);
void CkFtp2W_putPort(HCkFtp2W cHandle, long newVal);
BOOL CkFtp2W_getPreferNlst(HCkFtp2W cHandle);
void CkFtp2W_putPreferNlst(HCkFtp2W cHandle, BOOL newVal);
long CkFtp2W_getProgressMonSize(HCkFtp2W cHandle);
void CkFtp2W_putProgressMonSize(HCkFtp2W cHandle, long newVal);
void CkFtp2W_getProxyHostname(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putProxyHostname(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getProxyMethod(HCkFtp2W cHandle);
void CkFtp2W_putProxyMethod(HCkFtp2W cHandle, long newVal);
void CkFtp2W_getProxyPassword(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putProxyPassword(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getProxyPort(HCkFtp2W cHandle);
void CkFtp2W_putProxyPort(HCkFtp2W cHandle, long newVal);
void CkFtp2W_getProxyUsername(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putProxyUsername(HCkFtp2W cHandle, const wchar_t *newVal);
long CkFtp2W_getReadTimeout(HCkFtp2W cHandle);
void CkFtp2W_putReadTimeout(HCkFtp2W cHandle, long newVal);
BOOL CkFtp2W_getRequireSslCertVerify(HCkFtp2W cHandle);
void CkFtp2W_putRequireSslCertVerify(HCkFtp2W cHandle, BOOL newVal);
BOOL CkFtp2W_getRestartNext(HCkFtp2W cHandle);
void CkFtp2W_putRestartNext(HCkFtp2W cHandle, BOOL newVal);
int CkFtp2W_getSendBufferSize(HCkFtp2W cHandle);
void CkFtp2W_putSendBufferSize(HCkFtp2W cHandle, int newVal);
void CkFtp2W_getSessionLog(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_getSocksHostname(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putSocksHostname(HCkFtp2W cHandle, const wchar_t *newVal);
void CkFtp2W_getSocksPassword(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putSocksPassword(HCkFtp2W cHandle, const wchar_t *newVal);
int CkFtp2W_getSocksPort(HCkFtp2W cHandle);
void CkFtp2W_putSocksPort(HCkFtp2W cHandle, int newVal);
void CkFtp2W_getSocksUsername(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putSocksUsername(HCkFtp2W cHandle, const wchar_t *newVal);
int CkFtp2W_getSocksVersion(HCkFtp2W cHandle);
void CkFtp2W_putSocksVersion(HCkFtp2W cHandle, int newVal);
BOOL CkFtp2W_getSsl(HCkFtp2W cHandle);
void CkFtp2W_putSsl(HCkFtp2W cHandle, BOOL newVal);
void CkFtp2W_getSslProtocol(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putSslProtocol(HCkFtp2W cHandle, const wchar_t *newVal);
BOOL CkFtp2W_getSslServerCertVerified(HCkFtp2W cHandle);
void CkFtp2W_getSyncPreview(HCkFtp2W cHandle, HCkStringW retval);
long CkFtp2W_getUploadRate(HCkFtp2W cHandle);
BOOL CkFtp2W_getUseEpsv(HCkFtp2W cHandle);
void CkFtp2W_putUseEpsv(HCkFtp2W cHandle, BOOL newVal);
void CkFtp2W_getUsername(HCkFtp2W cHandle, HCkStringW retval);
void CkFtp2W_putUsername(HCkFtp2W cHandle, const wchar_t *newVal);
BOOL CkFtp2W_getVerboseLogging(HCkFtp2W cHandle);
void CkFtp2W_putVerboseLogging(HCkFtp2W cHandle, BOOL newVal);
void CkFtp2W_getVersion(HCkFtp2W cHandle, HCkStringW retval);
BOOL CkFtp2W_AppendFile(HCkFtp2W cHandle, const wchar_t *localFilename, const wchar_t *remoteFilename);
BOOL CkFtp2W_AppendFileFromBinaryData(HCkFtp2W cHandle, const wchar_t *remoteFilename, HCkByteDataW binaryData);
BOOL CkFtp2W_AppendFileFromTextData(HCkFtp2W cHandle, const wchar_t *remoteFilename, const wchar_t *textData);
void CkFtp2W_AsyncAbort(HCkFtp2W cHandle);
BOOL CkFtp2W_AsyncAppendFileStart(HCkFtp2W cHandle, const wchar_t *localFilename, const wchar_t *remoteFilename);
BOOL CkFtp2W_AsyncGetFileStart(HCkFtp2W cHandle, const wchar_t *remoteFilename, const wchar_t *localFilename);
BOOL CkFtp2W_AsyncPutFileStart(HCkFtp2W cHandle, const wchar_t *localFilename, const wchar_t *remoteFilename);
BOOL CkFtp2W_ChangeRemoteDir(HCkFtp2W cHandle, const wchar_t *relativeDirPath);
BOOL CkFtp2W_ClearControlChannel(HCkFtp2W cHandle);
void CkFtp2W_ClearDirCache(HCkFtp2W cHandle);
void CkFtp2W_ClearSessionLog(HCkFtp2W cHandle);
BOOL CkFtp2W_Connect(HCkFtp2W cHandle);
BOOL CkFtp2W_ConnectOnly(HCkFtp2W cHandle);
BOOL CkFtp2W_ConvertToTls(HCkFtp2W cHandle);
BOOL CkFtp2W_CreatePlan(HCkFtp2W cHandle, const wchar_t *localDir, HCkStringW outStr);
BOOL CkFtp2W_CreateRemoteDir(HCkFtp2W cHandle, const wchar_t *dir);
long CkFtp2W_DeleteMatching(HCkFtp2W cHandle, const wchar_t *remotePattern);
BOOL CkFtp2W_DeleteRemoteFile(HCkFtp2W cHandle, const wchar_t *filename);
BOOL CkFtp2W_DeleteTree(HCkFtp2W cHandle);
int CkFtp2W_DetermineProxyMethod(HCkFtp2W cHandle);
BOOL CkFtp2W_DetermineSettings(HCkFtp2W cHandle, HCkStringW outXmlReport);
BOOL CkFtp2W_DirTreeXml(HCkFtp2W cHandle, HCkStringW outStrXml);
BOOL CkFtp2W_Disconnect(HCkFtp2W cHandle);
BOOL CkFtp2W_DownloadTree(HCkFtp2W cHandle, const wchar_t *localRoot);
BOOL CkFtp2W_Feat(HCkFtp2W cHandle, HCkStringW outStr);
HCkDateTimeW CkFtp2W_GetCreateDt(HCkFtp2W cHandle, int index);
HCkDateTimeW CkFtp2W_GetCreateDtByName(HCkFtp2W cHandle, const wchar_t *filename);
BOOL CkFtp2W_GetCreateTime(HCkFtp2W cHandle, long index, SYSTEMTIME *outSysTime);
BOOL CkFtp2W_GetCreateTimeByName(HCkFtp2W cHandle, const wchar_t *filename, SYSTEMTIME *outSysTime);
BOOL CkFtp2W_GetCurrentRemoteDir(HCkFtp2W cHandle, HCkStringW outStr);
BOOL CkFtp2W_GetFile(HCkFtp2W cHandle, const wchar_t *remoteFilename, const wchar_t *localFilename);
BOOL CkFtp2W_GetFilename(HCkFtp2W cHandle, long index, HCkStringW outStr);
BOOL CkFtp2W_GetIsDirectory(HCkFtp2W cHandle, long index);
BOOL CkFtp2W_GetIsSymbolicLink(HCkFtp2W cHandle, long index);
HCkDateTimeW CkFtp2W_GetLastAccessDt(HCkFtp2W cHandle, int index);
HCkDateTimeW CkFtp2W_GetLastAccessDtByName(HCkFtp2W cHandle, const wchar_t *filename);
BOOL CkFtp2W_GetLastAccessTime(HCkFtp2W cHandle, long index, SYSTEMTIME *outSysTime);
BOOL CkFtp2W_GetLastAccessTimeByName(HCkFtp2W cHandle, const wchar_t *filename, SYSTEMTIME *outSysTime);
HCkDateTimeW CkFtp2W_GetLastModDt(HCkFtp2W cHandle, int index);
HCkDateTimeW CkFtp2W_GetLastModDtByName(HCkFtp2W cHandle, const wchar_t *filename);
BOOL CkFtp2W_GetLastModifiedTime(HCkFtp2W cHandle, long index, SYSTEMTIME *outSysTime);
BOOL CkFtp2W_GetLastModifiedTimeByName(HCkFtp2W cHandle, const wchar_t *filename, SYSTEMTIME *outSysTime);
BOOL CkFtp2W_GetRemoteFileBinaryData(HCkFtp2W cHandle, const wchar_t *remoteFilename, HCkByteDataW outData);
BOOL CkFtp2W_GetRemoteFileTextC(HCkFtp2W cHandle, const wchar_t *remoteFilename, const wchar_t *charset, HCkStringW outStr);
BOOL CkFtp2W_GetRemoteFileTextData(HCkFtp2W cHandle, const wchar_t *remoteFilename, HCkStringW outStr);
long CkFtp2W_GetSize(HCkFtp2W cHandle, long index);
long CkFtp2W_GetSizeByName(HCkFtp2W cHandle, const wchar_t *filname);
BOOL CkFtp2W_GetSizeStr(HCkFtp2W cHandle, long index, HCkStringW outStr);
BOOL CkFtp2W_GetSizeStrByName(HCkFtp2W cHandle, const wchar_t *filename, HCkStringW outStr);
HCkCertW CkFtp2W_GetSslServerCert(HCkFtp2W cHandle);
BOOL CkFtp2W_GetTextDirListing(HCkFtp2W cHandle, const wchar_t *pattern, HCkStringW outStrRawListing);
BOOL CkFtp2W_GetXmlDirListing(HCkFtp2W cHandle, const wchar_t *pattern, HCkStringW outStrXmlListing);
BOOL CkFtp2W_IsUnlocked(HCkFtp2W cHandle);
BOOL CkFtp2W_LoginAfterConnectOnly(HCkFtp2W cHandle);
long CkFtp2W_MGetFiles(HCkFtp2W cHandle, const wchar_t *remotePattern, const wchar_t *localDir);
long CkFtp2W_MPutFiles(HCkFtp2W cHandle, const wchar_t *pattern);
BOOL CkFtp2W_NlstXml(HCkFtp2W cHandle, const wchar_t *pattern, HCkStringW outStr);
BOOL CkFtp2W_Noop(HCkFtp2W cHandle);
BOOL CkFtp2W_PutFile(HCkFtp2W cHandle, const wchar_t *localFilename, const wchar_t *remoteFilename);
BOOL CkFtp2W_PutFileFromBinaryData(HCkFtp2W cHandle, const wchar_t *remoteFilename, HCkByteDataW binaryData);
BOOL CkFtp2W_PutFileFromTextData(HCkFtp2W cHandle, const wchar_t *remoteFilename, const wchar_t *textData);
BOOL CkFtp2W_PutPlan(HCkFtp2W cHandle, const wchar_t *planUtf8, const wchar_t *planLogFilename);
BOOL CkFtp2W_PutTree(HCkFtp2W cHandle, const wchar_t *localDir);
BOOL CkFtp2W_Quote(HCkFtp2W cHandle, const wchar_t *cmd);
BOOL CkFtp2W_RemoveRemoteDir(HCkFtp2W cHandle, const wchar_t *dir);
BOOL CkFtp2W_RenameRemoteFile(HCkFtp2W cHandle, const wchar_t *existingFilename, const wchar_t *newFilename);
BOOL CkFtp2W_SaveLastError(HCkFtp2W cHandle, const wchar_t *filename);
BOOL CkFtp2W_SendCommand(HCkFtp2W cHandle, const wchar_t *cmd, HCkStringW outReply);
BOOL CkFtp2W_SetModeZ(HCkFtp2W cHandle);
void CkFtp2W_SetOldestDate(HCkFtp2W cHandle, SYSTEMTIME *oldestDateTime);
BOOL CkFtp2W_SetRemoteFileDateTime(HCkFtp2W cHandle, SYSTEMTIME *dateTime, const wchar_t *remoteFilename);
BOOL CkFtp2W_SetRemoteFileDt(HCkFtp2W cHandle, HCkDateTimeW dt, const wchar_t *remoteFilename);
void CkFtp2W_SetSslCertRequirement(HCkFtp2W cHandle, const wchar_t *name, const wchar_t *value);
BOOL CkFtp2W_SetSslClientCert(HCkFtp2W cHandle, HCkCertW cert);
BOOL CkFtp2W_SetSslClientCertPem(HCkFtp2W cHandle, const wchar_t *pemDataOrFilename, const wchar_t *pemPassword);
BOOL CkFtp2W_SetSslClientCertPfx(HCkFtp2W cHandle, const wchar_t *pfxFilename, const wchar_t *pfxPassword, const wchar_t *certSubjectCN);
BOOL CkFtp2W_SetTypeAscii(HCkFtp2W cHandle);
BOOL CkFtp2W_SetTypeBinary(HCkFtp2W cHandle);
BOOL CkFtp2W_Site(HCkFtp2W cHandle, const wchar_t *params);
void CkFtp2W_SleepMs(HCkFtp2W cHandle, int millisec);
BOOL CkFtp2W_Stat(HCkFtp2W cHandle, HCkStringW outStr);
BOOL CkFtp2W_SyncLocalTree(HCkFtp2W cHandle, const wchar_t *localRoot, int mode);
BOOL CkFtp2W_SyncRemoteTree(HCkFtp2W cHandle, const wchar_t *localRoot, int mode);
BOOL CkFtp2W_SyncRemoteTree2(HCkFtp2W cHandle, const wchar_t *localRoot, int mode, BOOL bDescend, BOOL bPreviewOnly);
BOOL CkFtp2W_Syst(HCkFtp2W cHandle, HCkStringW outStr);
BOOL CkFtp2W_UnlockComponent(HCkFtp2W cHandle, const wchar_t *code);
const wchar_t *CkFtp2W__account(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__asyncLog(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__ck_stat(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__clientIpAddress(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__createPlan(HCkFtp2W cHandle, const wchar_t *localDir);
const wchar_t *CkFtp2W__debugLogFilePath(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__determineSettings(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__dirListingCharset(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__dirTreeXml(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__feat(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__forcePortIpAddress(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__getCurrentRemoteDir(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__getFilename(HCkFtp2W cHandle, long index);
const wchar_t *CkFtp2W__getRemoteFileTextC(HCkFtp2W cHandle, const wchar_t *remoteFilename, const wchar_t *charset);
const wchar_t *CkFtp2W__getRemoteFileTextData(HCkFtp2W cHandle, const wchar_t *remoteFilename);
const wchar_t *CkFtp2W__getSizeStr(HCkFtp2W cHandle, long index);
const wchar_t *CkFtp2W__getSizeStrByName(HCkFtp2W cHandle, const wchar_t *filename);
const wchar_t *CkFtp2W__getTextDirListing(HCkFtp2W cHandle, const wchar_t *pattern);
const wchar_t *CkFtp2W__getXmlDirListing(HCkFtp2W cHandle, const wchar_t *pattern);
const wchar_t *CkFtp2W__greeting(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__hostname(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__httpProxyAuthMethod(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__httpProxyDomain(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__httpProxyHostname(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__httpProxyPassword(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__httpProxyUsername(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__lastErrorHtml(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__lastErrorText(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__lastErrorXml(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__listPattern(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__nlstXml(HCkFtp2W cHandle, const wchar_t *pattern);
const wchar_t *CkFtp2W__password(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__proxyHostname(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__proxyPassword(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__proxyUsername(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__sendCommand(HCkFtp2W cHandle, const wchar_t *cmd);
const wchar_t *CkFtp2W__sessionLog(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__socksHostname(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__socksPassword(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__socksUsername(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__sslProtocol(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__syncPreview(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__syst(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__username(HCkFtp2W cHandle);
const wchar_t *CkFtp2W__version(HCkFtp2W cHandle);
#endif
