#ifndef _CkCrypt2_W_H
#define _CkCrypt2_W_H
#include "Chilkat_C.h"

HCkCrypt2W CkCrypt2W_Create(void);
void CkCrypt2W_Dispose(HCkCrypt2W handle);
int CkCrypt2W_getBlockSize(HCkCrypt2W cHandle);
BOOL CkCrypt2W_getCadesEnabled(HCkCrypt2W cHandle);
void CkCrypt2W_putCadesEnabled(HCkCrypt2W cHandle, BOOL newVal);
void CkCrypt2W_getCadesSigPolicyHash(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putCadesSigPolicyHash(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getCadesSigPolicyId(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putCadesSigPolicyId(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getCadesSigPolicyUri(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putCadesSigPolicyUri(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getCharset(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putCharset(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getCipherMode(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putCipherMode(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getCompressionAlgorithm(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putCompressionAlgorithm(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getCryptAlgorithm(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putCryptAlgorithm(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getDebugLogFilePath(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putDebugLogFilePath(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getEncodingMode(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putEncodingMode(HCkCrypt2W cHandle, const wchar_t *newVal);
BOOL CkCrypt2W_getFirstChunk(HCkCrypt2W cHandle);
void CkCrypt2W_putFirstChunk(HCkCrypt2W cHandle, BOOL newVal);
void CkCrypt2W_getHashAlgorithm(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putHashAlgorithm(HCkCrypt2W cHandle, const wchar_t *newVal);
long CkCrypt2W_getHavalRounds(HCkCrypt2W cHandle);
void CkCrypt2W_putHavalRounds(HCkCrypt2W cHandle, long newVal);
void CkCrypt2W_getIV(HCkCrypt2W cHandle, HCkByteDataW retval);
void CkCrypt2W_putIV(HCkCrypt2W cHandle, HCkByteDataW  newVal);
BOOL CkCrypt2W_getIncludeCertChain(HCkCrypt2W cHandle);
void CkCrypt2W_putIncludeCertChain(HCkCrypt2W cHandle, BOOL newVal);
int CkCrypt2W_getIterationCount(HCkCrypt2W cHandle);
void CkCrypt2W_putIterationCount(HCkCrypt2W cHandle, int newVal);
long CkCrypt2W_getKeyLength(HCkCrypt2W cHandle);
void CkCrypt2W_putKeyLength(HCkCrypt2W cHandle, long newVal);
BOOL CkCrypt2W_getLastChunk(HCkCrypt2W cHandle);
void CkCrypt2W_putLastChunk(HCkCrypt2W cHandle, BOOL newVal);
void CkCrypt2W_getLastErrorHtml(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_getLastErrorText(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_getLastErrorXml(HCkCrypt2W cHandle, HCkStringW retval);
int CkCrypt2W_getNumSignerCerts(HCkCrypt2W cHandle);
long CkCrypt2W_getPaddingScheme(HCkCrypt2W cHandle);
void CkCrypt2W_putPaddingScheme(HCkCrypt2W cHandle, long newVal);
void CkCrypt2W_getPbesAlgorithm(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putPbesAlgorithm(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getPbesPassword(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putPbesPassword(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getPkcs7CryptAlg(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putPkcs7CryptAlg(HCkCrypt2W cHandle, const wchar_t *newVal);
long CkCrypt2W_getRc2EffectiveKeyLength(HCkCrypt2W cHandle);
void CkCrypt2W_putRc2EffectiveKeyLength(HCkCrypt2W cHandle, long newVal);
void CkCrypt2W_getSalt(HCkCrypt2W cHandle, HCkByteDataW retval);
void CkCrypt2W_putSalt(HCkCrypt2W cHandle, HCkByteDataW  newVal);
void CkCrypt2W_getSecretKey(HCkCrypt2W cHandle, HCkByteDataW retval);
void CkCrypt2W_putSecretKey(HCkCrypt2W cHandle, HCkByteDataW  newVal);
void CkCrypt2W_getUuFilename(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putUuFilename(HCkCrypt2W cHandle, const wchar_t *newVal);
void CkCrypt2W_getUuMode(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_putUuMode(HCkCrypt2W cHandle, const wchar_t *newVal);
BOOL CkCrypt2W_getVerboseLogging(HCkCrypt2W cHandle);
void CkCrypt2W_putVerboseLogging(HCkCrypt2W cHandle, BOOL newVal);
void CkCrypt2W_getVersion(HCkCrypt2W cHandle, HCkStringW retval);
void CkCrypt2W_AddEncryptCert(HCkCrypt2W cHandle, HCkCertW cert);
BOOL CkCrypt2W_AddPfxSourceData(HCkCrypt2W cHandle, HCkByteDataW pfxData, const wchar_t *password);
BOOL CkCrypt2W_AddPfxSourceFile(HCkCrypt2W cHandle, const wchar_t *pfxFilePath, const wchar_t *password);
void CkCrypt2W_ByteSwap4321(HCkCrypt2W cHandle, HCkByteDataW inOut);
BOOL CkCrypt2W_BytesToString(HCkCrypt2W cHandle, HCkByteDataW inData, const wchar_t *charset, HCkStringW outStr);
BOOL CkCrypt2W_CkDecryptFile(HCkCrypt2W cHandle, const wchar_t *inFile, const wchar_t *outFile);
BOOL CkCrypt2W_CkEncryptFile(HCkCrypt2W cHandle, const wchar_t *inFile, const wchar_t *outFile);
void CkCrypt2W_ClearEncryptCerts(HCkCrypt2W cHandle);
BOOL CkCrypt2W_CompressBytes(HCkCrypt2W cHandle, HCkByteDataW bData, HCkByteDataW outData);
BOOL CkCrypt2W_CompressBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData, HCkStringW outStr);
BOOL CkCrypt2W_CompressString(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW outData);
BOOL CkCrypt2W_CompressStringENC(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_CreateDetachedSignature(HCkCrypt2W cHandle, const wchar_t *inFile, const wchar_t *sigFile);
BOOL CkCrypt2W_CreateP7M(HCkCrypt2W cHandle, const wchar_t *inFilename, const wchar_t *p7mFilename);
BOOL CkCrypt2W_CreateP7S(HCkCrypt2W cHandle, const wchar_t *inFilename, const wchar_t *p7sFilename);
void CkCrypt2W_Decode(HCkCrypt2W cHandle, const wchar_t *str, const wchar_t *encoding, HCkByteDataW outData);
BOOL CkCrypt2W_DecodeString(HCkCrypt2W cHandle, const wchar_t *inStr, const wchar_t *charset, const wchar_t *encoding, HCkStringW outStr);
BOOL CkCrypt2W_DecryptBytes(HCkCrypt2W cHandle, HCkByteDataW bData, HCkByteDataW outData);
BOOL CkCrypt2W_DecryptBytesENC(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW outData);
BOOL CkCrypt2W_DecryptEncoded(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_DecryptString(HCkCrypt2W cHandle, HCkByteDataW bData, HCkStringW outStr);
BOOL CkCrypt2W_DecryptStringENC(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_Encode(HCkCrypt2W cHandle, HCkByteDataW bData, const wchar_t *encoding, HCkStringW outStr);
BOOL CkCrypt2W_EncodeBytes(HCkCrypt2W cHandle, const void *byteData, int numBytes, const wchar_t *encoding, HCkStringW outStr);
BOOL CkCrypt2W_EncodeString(HCkCrypt2W cHandle, const wchar_t *inStr, const wchar_t *charset, const wchar_t *encoding, HCkStringW outStr);
BOOL CkCrypt2W_EncryptBytes(HCkCrypt2W cHandle, HCkByteDataW bData, HCkByteDataW outData);
BOOL CkCrypt2W_EncryptBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData, HCkStringW outStr);
BOOL CkCrypt2W_EncryptEncoded(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_EncryptString(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW outData);
BOOL CkCrypt2W_EncryptStringENC(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_GenEncodedSecretKey(HCkCrypt2W cHandle, const wchar_t *password, const wchar_t *encoding, HCkStringW outStr);
BOOL CkCrypt2W_GenRandomBytesENC(HCkCrypt2W cHandle, int numBytes, HCkStringW outStr);
void CkCrypt2W_GenerateSecretKey(HCkCrypt2W cHandle, const wchar_t *password, HCkByteDataW outData);
BOOL CkCrypt2W_GetEncodedIV(HCkCrypt2W cHandle, const wchar_t *encoding, HCkStringW outIV);
BOOL CkCrypt2W_GetEncodedKey(HCkCrypt2W cHandle, const wchar_t *encoding, HCkStringW outKey);
BOOL CkCrypt2W_GetEncodedSalt(HCkCrypt2W cHandle, const wchar_t *encoding, HCkStringW outStr);
HCkCertW CkCrypt2W_GetLastCert(HCkCrypt2W cHandle);
BOOL CkCrypt2W_GetSignatureSigningTime(HCkCrypt2W cHandle, int index, SYSTEMTIME *outSysTime);
HCkCertW CkCrypt2W_GetSignerCert(HCkCrypt2W cHandle, int index);
BOOL CkCrypt2W_HasSignatureSigningTime(HCkCrypt2W cHandle, int index);
BOOL CkCrypt2W_HashBeginBytes(HCkCrypt2W cHandle, HCkByteDataW data);
BOOL CkCrypt2W_HashBeginString(HCkCrypt2W cHandle, const wchar_t *strData);
BOOL CkCrypt2W_HashBytes(HCkCrypt2W cHandle, HCkByteDataW bData, HCkByteDataW outData);
BOOL CkCrypt2W_HashBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData, HCkStringW outStr);
BOOL CkCrypt2W_HashFile(HCkCrypt2W cHandle, const wchar_t *filename, HCkByteDataW outData);
BOOL CkCrypt2W_HashFileENC(HCkCrypt2W cHandle, const wchar_t *filename, HCkStringW outStr);
BOOL CkCrypt2W_HashFinal(HCkCrypt2W cHandle, HCkByteDataW outBytes);
BOOL CkCrypt2W_HashFinalENC(HCkCrypt2W cHandle, HCkStringW outStr);
BOOL CkCrypt2W_HashMoreBytes(HCkCrypt2W cHandle, HCkByteDataW data);
BOOL CkCrypt2W_HashMoreString(HCkCrypt2W cHandle, const wchar_t *strData);
BOOL CkCrypt2W_HashString(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW outData);
BOOL CkCrypt2W_HashStringENC(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
void CkCrypt2W_HmacBytes(HCkCrypt2W cHandle, HCkByteDataW inBytes, HCkByteDataW outHmac);
BOOL CkCrypt2W_HmacBytesENC(HCkCrypt2W cHandle, HCkByteDataW inBytes, HCkStringW outEncodedHmac);
void CkCrypt2W_HmacString(HCkCrypt2W cHandle, const wchar_t *inText, HCkByteDataW outHmac);
BOOL CkCrypt2W_HmacStringENC(HCkCrypt2W cHandle, const wchar_t *inText, HCkStringW outEncodedHmac);
BOOL CkCrypt2W_InflateBytes(HCkCrypt2W cHandle, HCkByteDataW bData, HCkByteDataW outData);
BOOL CkCrypt2W_InflateBytesENC(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW outData);
BOOL CkCrypt2W_InflateString(HCkCrypt2W cHandle, HCkByteDataW bData, HCkStringW outStr);
BOOL CkCrypt2W_InflateStringENC(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_IsUnlocked(HCkCrypt2W cHandle);
BOOL CkCrypt2W_MySqlAesDecrypt(HCkCrypt2W cHandle, const wchar_t *strEncrypted, const wchar_t *strKey, HCkStringW outStr);
BOOL CkCrypt2W_MySqlAesEncrypt(HCkCrypt2W cHandle, const wchar_t *strData, const wchar_t *strKey, HCkStringW outStr);
BOOL CkCrypt2W_OpaqueSignBytes(HCkCrypt2W cHandle, HCkByteDataW bData, HCkByteDataW outData);
BOOL CkCrypt2W_OpaqueSignBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData, HCkStringW outStr);
BOOL CkCrypt2W_OpaqueSignString(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW outData);
BOOL CkCrypt2W_OpaqueSignStringENC(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_OpaqueVerifyBytes(HCkCrypt2W cHandle, HCkByteDataW p7s, HCkByteDataW outOriginal);
BOOL CkCrypt2W_OpaqueVerifyBytesENC(HCkCrypt2W cHandle, const wchar_t *p7s, HCkByteDataW outOriginal);
BOOL CkCrypt2W_OpaqueVerifyString(HCkCrypt2W cHandle, HCkByteDataW p7s, HCkStringW outOriginal);
BOOL CkCrypt2W_OpaqueVerifyStringENC(HCkCrypt2W cHandle, const wchar_t *p7s, HCkStringW outOriginal);
BOOL CkCrypt2W_Pbkdf1(HCkCrypt2W cHandle, const wchar_t *password, const wchar_t *charset, const wchar_t *hashAlg, const wchar_t *salt, int iterationCount, int outputKeyBitLen, const wchar_t *encoding, HCkStringW outStr);
BOOL CkCrypt2W_Pbkdf2(HCkCrypt2W cHandle, const wchar_t *password, const wchar_t *charset, const wchar_t *hashAlg, const wchar_t *salt, int iterationCount, int outputKeyBitLen, const wchar_t *encoding, HCkStringW outStr);
void CkCrypt2W_RandomizeIV(HCkCrypt2W cHandle);
void CkCrypt2W_RandomizeKey(HCkCrypt2W cHandle);
BOOL CkCrypt2W_ReEncode(HCkCrypt2W cHandle, const wchar_t *data, const wchar_t *fromEncoding, const wchar_t *toEncoding, HCkStringW outStr);
BOOL CkCrypt2W_ReadFile(HCkCrypt2W cHandle, const wchar_t *filename, HCkByteDataW outBytes);
BOOL CkCrypt2W_SaveLastError(HCkCrypt2W cHandle, const wchar_t *filename);
#if defined(WIN32) && !defined(__MINGW32__)
#if defined(WIN32) && !defined(WINCE) && !defined(__MINGW32__)
BOOL CkCrypt2W_SetCSP(HCkCrypt2W cHandle, HCkCSPW csp);
#endif
#endif
BOOL CkCrypt2W_SetDecryptCert(HCkCrypt2W cHandle, HCkCertW cert);
BOOL CkCrypt2W_SetDecryptCert2(HCkCrypt2W cHandle, HCkCertW cert, HCkPrivateKeyW key);
void CkCrypt2W_SetEncodedIV(HCkCrypt2W cHandle, const wchar_t *ivStr, const wchar_t *encoding);
void CkCrypt2W_SetEncodedKey(HCkCrypt2W cHandle, const wchar_t *keyStr, const wchar_t *encoding);
void CkCrypt2W_SetEncodedSalt(HCkCrypt2W cHandle, const wchar_t *saltStr, const wchar_t *encoding);
void CkCrypt2W_SetEncryptCert(HCkCrypt2W cHandle, HCkCertW cert);
void CkCrypt2W_SetHmacKeyBytes(HCkCrypt2W cHandle, HCkByteDataW keyBytes);
void CkCrypt2W_SetHmacKeyEncoded(HCkCrypt2W cHandle, const wchar_t *key, const wchar_t *encoding);
void CkCrypt2W_SetHmacKeyString(HCkCrypt2W cHandle, const wchar_t *key);
void CkCrypt2W_SetIV(HCkCrypt2W cHandle, const unsigned char *ivData, int numBytes);
void CkCrypt2W_SetSecretKey(HCkCrypt2W cHandle, const unsigned char *keyData, int numBytes);
void CkCrypt2W_SetSecretKeyViaPassword(HCkCrypt2W cHandle, const wchar_t *password);
BOOL CkCrypt2W_SetSigningCert(HCkCrypt2W cHandle, HCkCertW cert);
BOOL CkCrypt2W_SetSigningCert2(HCkCrypt2W cHandle, HCkCertW cert, HCkPrivateKeyW key);
void CkCrypt2W_SetVerifyCert(HCkCrypt2W cHandle, HCkCertW cert);
BOOL CkCrypt2W_SignBytes(HCkCrypt2W cHandle, HCkByteDataW bData, HCkByteDataW outData);
BOOL CkCrypt2W_SignBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData, HCkStringW outStr);
BOOL CkCrypt2W_SignString(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW outData);
BOOL CkCrypt2W_SignStringENC(HCkCrypt2W cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkCrypt2W_StringToBytes(HCkCrypt2W cHandle, const wchar_t *inStr, const wchar_t *charset, HCkByteDataW outBytes);
BOOL CkCrypt2W_TrimEndingWith(HCkCrypt2W cHandle, const wchar_t *inStr, const wchar_t *ending, HCkStringW outStr);
BOOL CkCrypt2W_UnlockComponent(HCkCrypt2W cHandle, const wchar_t *unlockCode);
BOOL CkCrypt2W_VerifyBytes(HCkCrypt2W cHandle, HCkByteDataW bData1, HCkByteDataW sigData);
BOOL CkCrypt2W_VerifyBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData, const wchar_t *encodedSig);
BOOL CkCrypt2W_VerifyDetachedSignature(HCkCrypt2W cHandle, const wchar_t *inFile, const wchar_t *sigFile);
BOOL CkCrypt2W_VerifyP7M(HCkCrypt2W cHandle, const wchar_t *p7mFilename, const wchar_t *outFilename);
BOOL CkCrypt2W_VerifyP7S(HCkCrypt2W cHandle, const wchar_t *inFilename, const wchar_t *p7sFilename);
BOOL CkCrypt2W_VerifyString(HCkCrypt2W cHandle, const wchar_t *str, HCkByteDataW sigData);
BOOL CkCrypt2W_VerifyStringENC(HCkCrypt2W cHandle, const wchar_t *str, const wchar_t *encodedSig);
BOOL CkCrypt2W_WriteFile(HCkCrypt2W cHandle, const wchar_t *filename, HCkByteDataW fileData);
const wchar_t *CkCrypt2W__bytesToString(HCkCrypt2W cHandle, HCkByteDataW inData, const wchar_t *charset);
const wchar_t *CkCrypt2W__cadesSigPolicyHash(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__cadesSigPolicyId(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__cadesSigPolicyUri(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__charset(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__cipherMode(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__compressBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData);
const wchar_t *CkCrypt2W__compressStringENC(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__compressionAlgorithm(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__cryptAlgorithm(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__debugLogFilePath(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__decodeString(HCkCrypt2W cHandle, const wchar_t *inStr, const wchar_t *charset, const wchar_t *encoding);
const wchar_t *CkCrypt2W__decryptEncoded(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__decryptString(HCkCrypt2W cHandle, HCkByteDataW bData);
const wchar_t *CkCrypt2W__decryptStringENC(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__encode(HCkCrypt2W cHandle, HCkByteDataW bData, const wchar_t *encoding);
const wchar_t *CkCrypt2W__encodeBytes(HCkCrypt2W cHandle, const void *byteData, int numBytes, const wchar_t *encoding);
const wchar_t *CkCrypt2W__encodeString(HCkCrypt2W cHandle, const wchar_t *inStr, const wchar_t *charset, const wchar_t *encoding);
const wchar_t *CkCrypt2W__encodingMode(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__encryptBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData);
const wchar_t *CkCrypt2W__encryptEncoded(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__encryptStringENC(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__genEncodedSecretKey(HCkCrypt2W cHandle, const wchar_t *password, const wchar_t *encoding);
const wchar_t *CkCrypt2W__genRandomBytesENC(HCkCrypt2W cHandle, int numBytes);
const wchar_t *CkCrypt2W__getEncodedIV(HCkCrypt2W cHandle, const wchar_t *encoding);
const wchar_t *CkCrypt2W__getEncodedKey(HCkCrypt2W cHandle, const wchar_t *encoding);
const wchar_t *CkCrypt2W__getEncodedSalt(HCkCrypt2W cHandle, const wchar_t *encoding);
const wchar_t *CkCrypt2W__hashAlgorithm(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__hashBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData);
const wchar_t *CkCrypt2W__hashFileENC(HCkCrypt2W cHandle, const wchar_t *filename);
const wchar_t *CkCrypt2W__hashFinalENC(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__hashStringENC(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__hmacBytesENC(HCkCrypt2W cHandle, HCkByteDataW inBytes);
const wchar_t *CkCrypt2W__hmacStringENC(HCkCrypt2W cHandle, const wchar_t *inText);
const wchar_t *CkCrypt2W__inflateString(HCkCrypt2W cHandle, HCkByteDataW bData);
const wchar_t *CkCrypt2W__inflateStringENC(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__lastErrorHtml(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__lastErrorText(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__lastErrorXml(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__mySqlAesDecrypt(HCkCrypt2W cHandle, const wchar_t *strEncrypted, const wchar_t *strKey);
const wchar_t *CkCrypt2W__mySqlAesEncrypt(HCkCrypt2W cHandle, const wchar_t *strData, const wchar_t *strKey);
const wchar_t *CkCrypt2W__opaqueSignBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData);
const wchar_t *CkCrypt2W__opaqueSignStringENC(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__opaqueVerifyString(HCkCrypt2W cHandle, HCkByteDataW p7s);
const wchar_t *CkCrypt2W__opaqueVerifyStringENC(HCkCrypt2W cHandle, const wchar_t *p7s);
const wchar_t *CkCrypt2W__pbesAlgorithm(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__pbesPassword(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__pbkdf1(HCkCrypt2W cHandle, const wchar_t *password, const wchar_t *charset, const wchar_t *hashAlg, const wchar_t *salt, int iterationCount, int outputKeyBitLen, const wchar_t *encoding);
const wchar_t *CkCrypt2W__pbkdf2(HCkCrypt2W cHandle, const wchar_t *password, const wchar_t *charset, const wchar_t *hashAlg, const wchar_t *salt, int iterationCount, int outputKeyBitLen, const wchar_t *encoding);
const wchar_t *CkCrypt2W__pkcs7CryptAlg(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__reEncode(HCkCrypt2W cHandle, const wchar_t *data, const wchar_t *fromEncoding, const wchar_t *toEncoding);
const wchar_t *CkCrypt2W__signBytesENC(HCkCrypt2W cHandle, HCkByteDataW bData);
const wchar_t *CkCrypt2W__signStringENC(HCkCrypt2W cHandle, const wchar_t *str);
const wchar_t *CkCrypt2W__trimEndingWith(HCkCrypt2W cHandle, const wchar_t *inStr, const wchar_t *ending);
const wchar_t *CkCrypt2W__uuFilename(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__uuMode(HCkCrypt2W cHandle);
const wchar_t *CkCrypt2W__version(HCkCrypt2W cHandle);
#endif
