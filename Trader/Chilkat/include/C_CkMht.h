#ifndef _CkMht_H
#define _CkMht_H
#include "Chilkat_C.h"

HCkMht CkMht_Create(void);
void CkMht_Dispose(HCkMht handle);
void CkMht_getBaseUrl(HCkMht cHandle, HCkString retval);
void CkMht_putBaseUrl(HCkMht cHandle, const char *newVal);
long CkMht_getConnectTimeout(HCkMht cHandle);
void CkMht_putConnectTimeout(HCkMht cHandle, long newVal);
void CkMht_getDebugHtmlAfter(HCkMht cHandle, HCkString retval);
void CkMht_putDebugHtmlAfter(HCkMht cHandle, const char *newVal);
void CkMht_getDebugHtmlBefore(HCkMht cHandle, HCkString retval);
void CkMht_putDebugHtmlBefore(HCkMht cHandle, const char *newVal);
void CkMht_getDebugLogFilePath(HCkMht cHandle, HCkString retval);
void CkMht_putDebugLogFilePath(HCkMht cHandle, const char *newVal);
BOOL CkMht_getDebugTagCleaning(HCkMht cHandle);
void CkMht_putDebugTagCleaning(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getEmbedImages(HCkMht cHandle);
void CkMht_putEmbedImages(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getEmbedLocalOnly(HCkMht cHandle);
void CkMht_putEmbedLocalOnly(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getFetchFromCache(HCkMht cHandle);
void CkMht_putFetchFromCache(HCkMht cHandle, BOOL newVal);
long CkMht_getHeartbeatMs(HCkMht cHandle);
void CkMht_putHeartbeatMs(HCkMht cHandle, long newVal);
BOOL CkMht_getIgnoreMustRevalidate(HCkMht cHandle);
void CkMht_putIgnoreMustRevalidate(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getIgnoreNoCache(HCkMht cHandle);
void CkMht_putIgnoreNoCache(HCkMht cHandle, BOOL newVal);
void CkMht_getLastErrorHtml(HCkMht cHandle, HCkString retval);
void CkMht_getLastErrorText(HCkMht cHandle, HCkString retval);
void CkMht_getLastErrorXml(HCkMht cHandle, HCkString retval);
BOOL CkMht_getNoScripts(HCkMht cHandle);
void CkMht_putNoScripts(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getNtlmAuth(HCkMht cHandle);
void CkMht_putNtlmAuth(HCkMht cHandle, BOOL newVal);
long CkMht_getNumCacheLevels(HCkMht cHandle);
void CkMht_putNumCacheLevels(HCkMht cHandle, long newVal);
long CkMht_getNumCacheRoots(HCkMht cHandle);
BOOL CkMht_getPreferMHTScripts(HCkMht cHandle);
void CkMht_putPreferMHTScripts(HCkMht cHandle, BOOL newVal);
void CkMht_getProxy(HCkMht cHandle, HCkString retval);
void CkMht_putProxy(HCkMht cHandle, const char *newVal);
void CkMht_getProxyLogin(HCkMht cHandle, HCkString retval);
void CkMht_putProxyLogin(HCkMht cHandle, const char *newVal);
void CkMht_getProxyPassword(HCkMht cHandle, HCkString retval);
void CkMht_putProxyPassword(HCkMht cHandle, const char *newVal);
long CkMht_getReadTimeout(HCkMht cHandle);
void CkMht_putReadTimeout(HCkMht cHandle, long newVal);
void CkMht_getSocksHostname(HCkMht cHandle, HCkString retval);
void CkMht_putSocksHostname(HCkMht cHandle, const char *newVal);
void CkMht_getSocksPassword(HCkMht cHandle, HCkString retval);
void CkMht_putSocksPassword(HCkMht cHandle, const char *newVal);
int CkMht_getSocksPort(HCkMht cHandle);
void CkMht_putSocksPort(HCkMht cHandle, int newVal);
void CkMht_getSocksUsername(HCkMht cHandle, HCkString retval);
void CkMht_putSocksUsername(HCkMht cHandle, const char *newVal);
int CkMht_getSocksVersion(HCkMht cHandle);
void CkMht_putSocksVersion(HCkMht cHandle, int newVal);
BOOL CkMht_getUnpackUseRelPaths(HCkMht cHandle);
void CkMht_putUnpackUseRelPaths(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getUpdateCache(HCkMht cHandle);
void CkMht_putUpdateCache(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getUseCids(HCkMht cHandle);
void CkMht_putUseCids(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getUseFilename(HCkMht cHandle);
void CkMht_putUseFilename(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getUseIEProxy(HCkMht cHandle);
void CkMht_putUseIEProxy(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getUseInline(HCkMht cHandle);
void CkMht_putUseInline(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getUtf8(HCkMht cHandle);
void CkMht_putUtf8(HCkMht cHandle, BOOL newVal);
BOOL CkMht_getVerboseLogging(HCkMht cHandle);
void CkMht_putVerboseLogging(HCkMht cHandle, BOOL newVal);
void CkMht_getVersion(HCkMht cHandle, HCkString retval);
void CkMht_getWebSiteLogin(HCkMht cHandle, HCkString retval);
void CkMht_putWebSiteLogin(HCkMht cHandle, const char *newVal);
void CkMht_getWebSiteLoginDomain(HCkMht cHandle, HCkString retval);
void CkMht_putWebSiteLoginDomain(HCkMht cHandle, const char *newVal);
void CkMht_getWebSitePassword(HCkMht cHandle, HCkString retval);
void CkMht_putWebSitePassword(HCkMht cHandle, const char *newVal);
void CkMht_AddCacheRoot(HCkMht cHandle, const char *dir);
void CkMht_AddCustomHeader(HCkMht cHandle, const char *name, const char *value);
void CkMht_AddExternalStyleSheet(HCkMht cHandle, const char *url);
void CkMht_ClearCustomHeaders(HCkMht cHandle);
void CkMht_ExcludeImagesMatching(HCkMht cHandle, const char *pattern);
BOOL CkMht_GetAndSaveEML(HCkMht cHandle, const char *url, const char *emlFilename);
BOOL CkMht_GetAndSaveMHT(HCkMht cHandle, const char *url, const char *mhtFilename);
BOOL CkMht_GetAndZipEML(HCkMht cHandle, const char *url, const char *zipEntryFilename, const char *zipFilename);
BOOL CkMht_GetAndZipMHT(HCkMht cHandle, const char *url, const char *zipEntryFilename, const char *zipFilename);
BOOL CkMht_GetCacheRoot(HCkMht cHandle, int index, HCkString str);
BOOL CkMht_GetEML(HCkMht cHandle, const char *url, HCkString outStr);
HCkEmail CkMht_GetEmail(HCkMht cHandle, const char *url);
BOOL CkMht_GetMHT(HCkMht cHandle, const char *url, HCkString outStr);
HCkMime CkMht_GetMime(HCkMht cHandle, const char *url);
BOOL CkMht_HtmlToEML(HCkMht cHandle, const char *htmlText, HCkString outStr);
BOOL CkMht_HtmlToEMLFile(HCkMht cHandle, const char *html, const char *emlFilename);
HCkEmail CkMht_HtmlToEmail(HCkMht cHandle, const char *htmlText);
BOOL CkMht_HtmlToMHT(HCkMht cHandle, const char *htmlText, HCkString outStr);
BOOL CkMht_HtmlToMHTFile(HCkMht cHandle, const char *html, const char *mhtFilename);
BOOL CkMht_IsUnlocked(HCkMht cHandle);
void CkMht_RemoveCustomHeader(HCkMht cHandle, const char *name);
void CkMht_RestoreDefaults(HCkMht cHandle);
BOOL CkMht_SaveLastError(HCkMht cHandle, const char *filename);
BOOL CkMht_UnlockComponent(HCkMht cHandle, const char *unlockCode);
BOOL CkMht_UnpackMHT(HCkMht cHandle, const char *mhtFilename, const char *unpackDir, const char *htmlFilename, const char *partsSubDir);
BOOL CkMht_UnpackMHTString(HCkMht cHandle, const char *mhtContents, const char *unpackDir, const char *htmlFilename, const char *partsSubDir);
const char *CkMht_baseUrl(HCkMht cHandle);
const char *CkMht_debugHtmlAfter(HCkMht cHandle);
const char *CkMht_debugHtmlBefore(HCkMht cHandle);
const char *CkMht_debugLogFilePath(HCkMht cHandle);
const char *CkMht_getCacheRoot(HCkMht cHandle, int index);
const char *CkMht_getEML(HCkMht cHandle, const char *url);
const char *CkMht_getMHT(HCkMht cHandle, const char *url);
const char *CkMht_htmlToEML(HCkMht cHandle, const char *htmlText);
const char *CkMht_htmlToMHT(HCkMht cHandle, const char *htmlText);
const char *CkMht_lastErrorHtml(HCkMht cHandle);
const char *CkMht_lastErrorText(HCkMht cHandle);
const char *CkMht_lastErrorXml(HCkMht cHandle);
const char *CkMht_proxy(HCkMht cHandle);
const char *CkMht_proxyLogin(HCkMht cHandle);
const char *CkMht_proxyPassword(HCkMht cHandle);
const char *CkMht_socksHostname(HCkMht cHandle);
const char *CkMht_socksPassword(HCkMht cHandle);
const char *CkMht_socksUsername(HCkMht cHandle);
const char *CkMht_version(HCkMht cHandle);
const char *CkMht_webSiteLogin(HCkMht cHandle);
const char *CkMht_webSiteLoginDomain(HCkMht cHandle);
const char *CkMht_webSitePassword(HCkMht cHandle);
#endif
