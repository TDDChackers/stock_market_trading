#ifndef _CkMailMan_W_H
#define _CkMailMan_W_H
#include "Chilkat_C.h"

HCkMailManW CkMailManW_Create(void);
void CkMailManW_Dispose(HCkMailManW handle);
BOOL CkMailManW_getAllOrNone(HCkMailManW cHandle);
void CkMailManW_putAllOrNone(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getAutoFix(HCkMailManW cHandle);
void CkMailManW_putAutoFix(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getAutoGenMessageId(HCkMailManW cHandle);
void CkMailManW_putAutoGenMessageId(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getAutoSmtpRset(HCkMailManW cHandle);
void CkMailManW_putAutoSmtpRset(HCkMailManW cHandle, BOOL newVal);
void CkMailManW_getClientIpAddress(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putClientIpAddress(HCkMailManW cHandle, const wchar_t *newVal);
long CkMailManW_getConnectTimeout(HCkMailManW cHandle);
void CkMailManW_putConnectTimeout(HCkMailManW cHandle, long newVal);
void CkMailManW_getDebugLogFilePath(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putDebugLogFilePath(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getDsnEnvid(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putDsnEnvid(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getDsnNotify(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putDsnNotify(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getDsnRet(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putDsnRet(HCkMailManW cHandle, const wchar_t *newVal);
BOOL CkMailManW_getEmbedCertChain(HCkMailManW cHandle);
void CkMailManW_putEmbedCertChain(HCkMailManW cHandle, BOOL newVal);
HCkMailProgressW CkMailManW_getEventCallbackObject(HCkMailManW cHandle);
void CkMailManW_putEventCallbackObject(HCkMailManW cHandle, HCkMailProgressW newVal);
void CkMailManW_getFilter(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putFilter(HCkMailManW cHandle, const wchar_t *newVal);
long CkMailManW_getHeartbeatMs(HCkMailManW cHandle);
void CkMailManW_putHeartbeatMs(HCkMailManW cHandle, long newVal);
void CkMailManW_getHeloHostname(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putHeloHostname(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getHttpProxyAuthMethod(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putHttpProxyAuthMethod(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getHttpProxyDomain(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putHttpProxyDomain(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getHttpProxyHostname(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putHttpProxyHostname(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getHttpProxyPassword(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putHttpProxyPassword(HCkMailManW cHandle, const wchar_t *newVal);
int CkMailManW_getHttpProxyPort(HCkMailManW cHandle);
void CkMailManW_putHttpProxyPort(HCkMailManW cHandle, int newVal);
void CkMailManW_getHttpProxyUsername(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putHttpProxyUsername(HCkMailManW cHandle, const wchar_t *newVal);
BOOL CkMailManW_getImmediateDelete(HCkMailManW cHandle);
void CkMailManW_putImmediateDelete(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getIncludeRootCert(HCkMailManW cHandle);
void CkMailManW_putIncludeRootCert(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getIsSmtpConnected(HCkMailManW cHandle);
void CkMailManW_getLastErrorHtml(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_getLastErrorText(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_getLastErrorXml(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_getLastSendQFilename(HCkMailManW cHandle, HCkStringW retval);
long CkMailManW_getLastSmtpStatus(HCkMailManW cHandle);
void CkMailManW_getLogMailReceivedFilename(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putLogMailReceivedFilename(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getLogMailSentFilename(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putLogMailSentFilename(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getMailHost(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putMailHost(HCkMailManW cHandle, const wchar_t *newVal);
long CkMailManW_getMailPort(HCkMailManW cHandle);
void CkMailManW_putMailPort(HCkMailManW cHandle, long newVal);
long CkMailManW_getMaxCount(HCkMailManW cHandle);
void CkMailManW_putMaxCount(HCkMailManW cHandle, long newVal);
BOOL CkMailManW_getOpaqueSigning(HCkMailManW cHandle);
void CkMailManW_putOpaqueSigning(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getPop3SPA(HCkMailManW cHandle);
void CkMailManW_putPop3SPA(HCkMailManW cHandle, BOOL newVal);
int CkMailManW_getPop3SessionId(HCkMailManW cHandle);
void CkMailManW_getPop3SessionLog(HCkMailManW cHandle, HCkStringW retval);
BOOL CkMailManW_getPop3SslServerCertVerified(HCkMailManW cHandle);
BOOL CkMailManW_getPop3Stls(HCkMailManW cHandle);
void CkMailManW_putPop3Stls(HCkMailManW cHandle, BOOL newVal);
void CkMailManW_getPopPassword(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putPopPassword(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_putPopPasswordBase64(HCkMailManW cHandle, const wchar_t *newVal);
BOOL CkMailManW_getPopSsl(HCkMailManW cHandle);
void CkMailManW_putPopSsl(HCkMailManW cHandle, BOOL newVal);
void CkMailManW_getPopUsername(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putPopUsername(HCkMailManW cHandle, const wchar_t *newVal);
long CkMailManW_getReadTimeout(HCkMailManW cHandle);
void CkMailManW_putReadTimeout(HCkMailManW cHandle, long newVal);
BOOL CkMailManW_getRequireSslCertVerify(HCkMailManW cHandle);
void CkMailManW_putRequireSslCertVerify(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getResetDateOnLoad(HCkMailManW cHandle);
void CkMailManW_putResetDateOnLoad(HCkMailManW cHandle, BOOL newVal);
int CkMailManW_getSendBufferSize(HCkMailManW cHandle);
void CkMailManW_putSendBufferSize(HCkMailManW cHandle, int newVal);
BOOL CkMailManW_getSendIndividual(HCkMailManW cHandle);
void CkMailManW_putSendIndividual(HCkMailManW cHandle, BOOL newVal);
long CkMailManW_getSizeLimit(HCkMailManW cHandle);
void CkMailManW_putSizeLimit(HCkMailManW cHandle, long newVal);
void CkMailManW_getSmtpAuthMethod(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSmtpAuthMethod(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getSmtpHost(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSmtpHost(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getSmtpLoginDomain(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSmtpLoginDomain(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getSmtpPassword(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSmtpPassword(HCkMailManW cHandle, const wchar_t *newVal);
long CkMailManW_getSmtpPort(HCkMailManW cHandle);
void CkMailManW_putSmtpPort(HCkMailManW cHandle, long newVal);
void CkMailManW_getSmtpSessionLog(HCkMailManW cHandle, HCkStringW retval);
BOOL CkMailManW_getSmtpSsl(HCkMailManW cHandle);
void CkMailManW_putSmtpSsl(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getSmtpSslServerCertVerified(HCkMailManW cHandle);
void CkMailManW_getSmtpUsername(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSmtpUsername(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getSocksHostname(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSocksHostname(HCkMailManW cHandle, const wchar_t *newVal);
void CkMailManW_getSocksPassword(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSocksPassword(HCkMailManW cHandle, const wchar_t *newVal);
int CkMailManW_getSocksPort(HCkMailManW cHandle);
void CkMailManW_putSocksPort(HCkMailManW cHandle, int newVal);
void CkMailManW_getSocksUsername(HCkMailManW cHandle, HCkStringW retval);
void CkMailManW_putSocksUsername(HCkMailManW cHandle, const wchar_t *newVal);
int CkMailManW_getSocksVersion(HCkMailManW cHandle);
void CkMailManW_putSocksVersion(HCkMailManW cHandle, int newVal);
BOOL CkMailManW_getStartTLS(HCkMailManW cHandle);
void CkMailManW_putStartTLS(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getUseApop(HCkMailManW cHandle);
void CkMailManW_putUseApop(HCkMailManW cHandle, BOOL newVal);
BOOL CkMailManW_getVerboseLogging(HCkMailManW cHandle);
void CkMailManW_putVerboseLogging(HCkMailManW cHandle, BOOL newVal);
void CkMailManW_getVersion(HCkMailManW cHandle, HCkStringW retval);
BOOL CkMailManW_AddPfxSourceData(HCkMailManW cHandle, HCkByteDataW pfxData, const wchar_t *password);
BOOL CkMailManW_AddPfxSourceFile(HCkMailManW cHandle, const wchar_t *pfxFilePath, const wchar_t *password);
long CkMailManW_CheckMail(HCkMailManW cHandle);
void CkMailManW_ClearBadEmailAddresses(HCkMailManW cHandle);
void CkMailManW_ClearPop3SessionLog(HCkMailManW cHandle);
void CkMailManW_ClearSmtpSessionLog(HCkMailManW cHandle);
BOOL CkMailManW_CloseSmtpConnection(HCkMailManW cHandle);
HCkEmailBundleW CkMailManW_CopyMail(HCkMailManW cHandle);
BOOL CkMailManW_DeleteBundle(HCkMailManW cHandle, HCkEmailBundleW bundle);
BOOL CkMailManW_DeleteByMsgnum(HCkMailManW cHandle, int msgnum);
BOOL CkMailManW_DeleteByUidl(HCkMailManW cHandle, const wchar_t *uidl);
BOOL CkMailManW_DeleteEmail(HCkMailManW cHandle, HCkEmailW email);
BOOL CkMailManW_DeleteMultiple(HCkMailManW cHandle, HCkStringArrayW uidlArray);
HCkEmailW CkMailManW_FetchByMsgnum(HCkMailManW cHandle, int msgnum);
HCkEmailW CkMailManW_FetchEmail(HCkMailManW cHandle, const wchar_t *uidl);
BOOL CkMailManW_FetchMime(HCkMailManW cHandle, const wchar_t *uidl, HCkByteDataW outData);
BOOL CkMailManW_FetchMimeByMsgnum(HCkMailManW cHandle, int msgnum, HCkByteDataW outBytes);
HCkEmailBundleW CkMailManW_FetchMultiple(HCkMailManW cHandle, HCkStringArrayW uidlArray);
HCkEmailBundleW CkMailManW_FetchMultipleHeaders(HCkMailManW cHandle, HCkStringArrayW uidlArray, long numBodyLines);
HCkStringArrayW CkMailManW_FetchMultipleMime(HCkMailManW cHandle, HCkStringArrayW uidlArray);
HCkEmailW CkMailManW_FetchSingleHeader(HCkMailManW cHandle, long numBodyLines, long msgNum);
HCkEmailW CkMailManW_FetchSingleHeaderByUidl(HCkMailManW cHandle, long numBodyLines, const wchar_t *uidl);
HCkEmailBundleW CkMailManW_GetAllHeaders(HCkMailManW cHandle, long numBodyLines);
HCkStringArrayW CkMailManW_GetBadEmailAddresses(HCkMailManW cHandle);
HCkEmailW CkMailManW_GetFullEmail(HCkMailManW cHandle, HCkEmailW email);
HCkEmailBundleW CkMailManW_GetHeaders(HCkMailManW cHandle, long numBodyLines, long fromIndex, long toIndex);
int CkMailManW_GetMailboxCount(HCkMailManW cHandle);
BOOL CkMailManW_GetMailboxInfoXml(HCkMailManW cHandle, HCkStringW outXml);
unsigned long CkMailManW_GetMailboxSize(HCkMailManW cHandle);
HCkCertW CkMailManW_GetPop3SslServerCert(HCkMailManW cHandle);
int CkMailManW_GetSizeByUidl(HCkMailManW cHandle, const wchar_t *uidl);
HCkCertW CkMailManW_GetSmtpSslServerCert(HCkMailManW cHandle);
HCkStringArrayW CkMailManW_GetUidls(HCkMailManW cHandle);
BOOL CkMailManW_IsSmtpDsnCapable(HCkMailManW cHandle);
BOOL CkMailManW_IsUnlocked(HCkMailManW cHandle);
HCkEmailW CkMailManW_LoadEml(HCkMailManW cHandle, const wchar_t *emlFilename);
HCkEmailBundleW CkMailManW_LoadMbx(HCkMailManW cHandle, const wchar_t *mbxFileName);
HCkEmailW CkMailManW_LoadMime(HCkMailManW cHandle, const wchar_t *mimeText);
HCkEmailW CkMailManW_LoadXmlEmail(HCkMailManW cHandle, const wchar_t *folderPath);
HCkEmailW CkMailManW_LoadXmlEmailString(HCkMailManW cHandle, const wchar_t *xmlString);
HCkEmailBundleW CkMailManW_LoadXmlFile(HCkMailManW cHandle, const wchar_t *folderPath);
HCkEmailBundleW CkMailManW_LoadXmlString(HCkMailManW cHandle, const wchar_t *xmlString);
#ifndef WINCE
BOOL CkMailManW_MxLookup(HCkMailManW cHandle, const wchar_t *emailAddr, HCkStringW outStrHostname);
#endif
#ifndef WINCE
HCkStringArrayW CkMailManW_MxLookupAll(HCkMailManW cHandle, const wchar_t *emailAddress);
#endif
BOOL CkMailManW_OpenSmtpConnection(HCkMailManW cHandle);
BOOL CkMailManW_Pop3BeginSession(HCkMailManW cHandle);
BOOL CkMailManW_Pop3EndSession(HCkMailManW cHandle);
BOOL CkMailManW_Pop3EndSessionNoQuit(HCkMailManW cHandle);
BOOL CkMailManW_Pop3Noop(HCkMailManW cHandle);
BOOL CkMailManW_Pop3Reset(HCkMailManW cHandle);
BOOL CkMailManW_Pop3SendRawCommand(HCkMailManW cHandle, const wchar_t *command, const wchar_t *charset, HCkStringW outStr);
BOOL CkMailManW_QuickSend(HCkMailManW cHandle, const wchar_t *fromAddr, const wchar_t *toAddrs, const wchar_t *subject, const wchar_t *body, const wchar_t *smtpServer);
BOOL CkMailManW_RenderToMime(HCkMailManW cHandle, HCkEmailW email, HCkStringW outStr);
BOOL CkMailManW_RenderToMimeBytes(HCkMailManW cHandle, HCkEmailW email, HCkByteDataW outBytes);
BOOL CkMailManW_SaveLastError(HCkMailManW cHandle, const wchar_t *filename);
BOOL CkMailManW_SendBundle(HCkMailManW cHandle, HCkEmailBundleW bundle);
BOOL CkMailManW_SendEmail(HCkMailManW cHandle, HCkEmailW email);
BOOL CkMailManW_SendMime(HCkMailManW cHandle, const wchar_t *from, const wchar_t *recipients, const wchar_t *mimeMsg);
BOOL CkMailManW_SendMimeBytes(HCkMailManW cHandle, const wchar_t *from, const wchar_t *recipients, HCkByteDataW mimeData);
#ifndef WINCE
BOOL CkMailManW_SendMimeBytesQ(HCkMailManW cHandle, const wchar_t *from, const wchar_t *recipients, HCkByteDataW mimeData);
#endif
BOOL CkMailManW_SendMimeQ(HCkMailManW cHandle, const wchar_t *from, const wchar_t *recipients, const wchar_t *mimeMsg);
BOOL CkMailManW_SendMimeToList(HCkMailManW cHandle, const wchar_t *from, const wchar_t *distListFile, const wchar_t *mimeText);
#ifndef WINCE
BOOL CkMailManW_SendQ(HCkMailManW cHandle, HCkEmailW email);
#endif
#ifndef WINCE
BOOL CkMailManW_SendQ2(HCkMailManW cHandle, HCkEmailW email, const wchar_t *queueDir);
#endif
BOOL CkMailManW_SendToDistributionList(HCkMailManW cHandle, HCkEmailW email, HCkStringArrayW sa);
#if defined(WIN32) && !defined(__MINGW32__)
#if defined(WIN32) && !defined(WINCE) && !defined(__MINGW32__)
BOOL CkMailManW_SetCSP(HCkMailManW cHandle, HCkCSPW csp);
#endif
#endif
BOOL CkMailManW_SetDecryptCert2(HCkMailManW cHandle, HCkCertW cert, HCkPrivateKeyW key);
BOOL CkMailManW_SetSslClientCert(HCkMailManW cHandle, HCkCertW cert);
BOOL CkMailManW_SetSslClientCertPem(HCkMailManW cHandle, const wchar_t *pemDataOrFilename, const wchar_t *pemPassword);
BOOL CkMailManW_SetSslClientCertPfx(HCkMailManW cHandle, const wchar_t *pfxFilename, const wchar_t *pfxPassword, const wchar_t *certSubjectCN);
BOOL CkMailManW_SmtpNoop(HCkMailManW cHandle);
BOOL CkMailManW_SmtpReset(HCkMailManW cHandle);
BOOL CkMailManW_SmtpSendRawCommand(HCkMailManW cHandle, const wchar_t *command, const wchar_t *charset, BOOL bEncodeBase64, HCkStringW outStr);
BOOL CkMailManW_SshAuthenticatePk(HCkMailManW cHandle, BOOL bSmtp, const wchar_t *sshLogin, HCkSshKeyW privateKey);
BOOL CkMailManW_SshAuthenticatePw(HCkMailManW cHandle, BOOL bSmtp, const wchar_t *sshLogin, const wchar_t *sshPassword);
BOOL CkMailManW_SshCloseTunnel(HCkMailManW cHandle, BOOL bSmtp);
BOOL CkMailManW_SshTunnel(HCkMailManW cHandle, BOOL bSmtp, const wchar_t *sshServerHostname, int sshServerPort);
HCkEmailBundleW CkMailManW_TransferMail(HCkMailManW cHandle);
HCkStringArrayW CkMailManW_TransferMultipleMime(HCkMailManW cHandle, HCkStringArrayW uidlArray);
BOOL CkMailManW_UnlockComponent(HCkMailManW cHandle, const wchar_t *code);
BOOL CkMailManW_VerifyPopConnection(HCkMailManW cHandle);
BOOL CkMailManW_VerifyPopLogin(HCkMailManW cHandle);
BOOL CkMailManW_VerifyRecipients(HCkMailManW cHandle, HCkEmailW email, HCkStringArrayW saBadAddrs);
BOOL CkMailManW_VerifySmtpConnection(HCkMailManW cHandle);
BOOL CkMailManW_VerifySmtpLogin(HCkMailManW cHandle);
const wchar_t *CkMailManW__clientIpAddress(HCkMailManW cHandle);
const wchar_t *CkMailManW__debugLogFilePath(HCkMailManW cHandle);
const wchar_t *CkMailManW__dsnEnvid(HCkMailManW cHandle);
const wchar_t *CkMailManW__dsnNotify(HCkMailManW cHandle);
const wchar_t *CkMailManW__dsnRet(HCkMailManW cHandle);
const wchar_t *CkMailManW__filter(HCkMailManW cHandle);
const wchar_t *CkMailManW__getMailboxInfoXml(HCkMailManW cHandle);
const wchar_t *CkMailManW__heloHostname(HCkMailManW cHandle);
const wchar_t *CkMailManW__httpProxyAuthMethod(HCkMailManW cHandle);
const wchar_t *CkMailManW__httpProxyDomain(HCkMailManW cHandle);
const wchar_t *CkMailManW__httpProxyHostname(HCkMailManW cHandle);
const wchar_t *CkMailManW__httpProxyPassword(HCkMailManW cHandle);
const wchar_t *CkMailManW__httpProxyUsername(HCkMailManW cHandle);
const wchar_t *CkMailManW__lastErrorHtml(HCkMailManW cHandle);
const wchar_t *CkMailManW__lastErrorText(HCkMailManW cHandle);
const wchar_t *CkMailManW__lastErrorXml(HCkMailManW cHandle);
const wchar_t *CkMailManW__lastSendQFilename(HCkMailManW cHandle);
const wchar_t *CkMailManW__logMailReceivedFilename(HCkMailManW cHandle);
const wchar_t *CkMailManW__logMailSentFilename(HCkMailManW cHandle);
const wchar_t *CkMailManW__mailHost(HCkMailManW cHandle);
#ifndef WINCE
const wchar_t *CkMailManW__mxLookup(HCkMailManW cHandle, const wchar_t *emailAddr);
#endif
const wchar_t *CkMailManW__pop3SendRawCommand(HCkMailManW cHandle, const wchar_t *command, const wchar_t *charset);
const wchar_t *CkMailManW__pop3SessionLog(HCkMailManW cHandle);
const wchar_t *CkMailManW__popPassword(HCkMailManW cHandle);
const wchar_t *CkMailManW__popUsername(HCkMailManW cHandle);
const wchar_t *CkMailManW__renderToMime(HCkMailManW cHandle, HCkEmailW email);
const wchar_t *CkMailManW__smtpAuthMethod(HCkMailManW cHandle);
const wchar_t *CkMailManW__smtpHost(HCkMailManW cHandle);
const wchar_t *CkMailManW__smtpLoginDomain(HCkMailManW cHandle);
const wchar_t *CkMailManW__smtpPassword(HCkMailManW cHandle);
const wchar_t *CkMailManW__smtpSendRawCommand(HCkMailManW cHandle, const wchar_t *command, const wchar_t *charset, BOOL bEncodeBase64);
const wchar_t *CkMailManW__smtpSessionLog(HCkMailManW cHandle);
const wchar_t *CkMailManW__smtpUsername(HCkMailManW cHandle);
const wchar_t *CkMailManW__socksHostname(HCkMailManW cHandle);
const wchar_t *CkMailManW__socksPassword(HCkMailManW cHandle);
const wchar_t *CkMailManW__socksUsername(HCkMailManW cHandle);
const wchar_t *CkMailManW__version(HCkMailManW cHandle);
#endif
