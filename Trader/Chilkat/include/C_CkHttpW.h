#ifndef _CkHttp_W_H
#define _CkHttp_W_H
#include "Chilkat_C.h"

HCkHttpW CkHttpW_Create(void);
void CkHttpW_Dispose(HCkHttpW handle);
void CkHttpW_getAccept(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putAccept(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getAcceptCharset(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putAcceptCharset(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getAcceptLanguage(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putAcceptLanguage(HCkHttpW cHandle, const wchar_t *newVal);
BOOL CkHttpW_getAllowGzip(HCkHttpW cHandle);
void CkHttpW_putAllowGzip(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getAutoAddHostHeader(HCkHttpW cHandle);
void CkHttpW_putAutoAddHostHeader(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getAwsAccessKey(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putAwsAccessKey(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getAwsSecretKey(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putAwsSecretKey(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getAwsSubResources(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putAwsSubResources(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getBgLastErrorText(HCkHttpW cHandle, HCkStringW retval);
int CkHttpW_getBgPercentDone(HCkHttpW cHandle);
void CkHttpW_getBgResultData(HCkHttpW cHandle, HCkByteDataW retval);
int CkHttpW_getBgResultInt(HCkHttpW cHandle);
void CkHttpW_getBgResultString(HCkHttpW cHandle, HCkStringW retval);
BOOL CkHttpW_getBgTaskFinished(HCkHttpW cHandle);
BOOL CkHttpW_getBgTaskRunning(HCkHttpW cHandle);
BOOL CkHttpW_getBgTaskSuccess(HCkHttpW cHandle);
void CkHttpW_getClientIpAddress(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putClientIpAddress(HCkHttpW cHandle, const wchar_t *newVal);
long CkHttpW_getConnectTimeout(HCkHttpW cHandle);
void CkHttpW_putConnectTimeout(HCkHttpW cHandle, long newVal);
void CkHttpW_getConnection(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putConnection(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getCookieDir(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putCookieDir(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getDebugLogFilePath(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putDebugLogFilePath(HCkHttpW cHandle, const wchar_t *newVal);
long CkHttpW_getDefaultFreshPeriod(HCkHttpW cHandle);
void CkHttpW_putDefaultFreshPeriod(HCkHttpW cHandle, long newVal);
BOOL CkHttpW_getDigestAuth(HCkHttpW cHandle);
void CkHttpW_putDigestAuth(HCkHttpW cHandle, BOOL newVal);
HCkHttpProgressW CkHttpW_getEventCallbackObject(HCkHttpW cHandle);
void CkHttpW_putEventCallbackObject(HCkHttpW cHandle, HCkHttpProgressW newVal);
int CkHttpW_getEventLogCount(HCkHttpW cHandle);
BOOL CkHttpW_getFetchFromCache(HCkHttpW cHandle);
void CkHttpW_putFetchFromCache(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getFinalRedirectUrl(HCkHttpW cHandle, HCkStringW retval);
BOOL CkHttpW_getFollowRedirects(HCkHttpW cHandle);
void CkHttpW_putFollowRedirects(HCkHttpW cHandle, BOOL newVal);
long CkHttpW_getFreshnessAlgorithm(HCkHttpW cHandle);
void CkHttpW_putFreshnessAlgorithm(HCkHttpW cHandle, long newVal);
long CkHttpW_getHeartbeatMs(HCkHttpW cHandle);
void CkHttpW_putHeartbeatMs(HCkHttpW cHandle, long newVal);
BOOL CkHttpW_getIgnoreMustRevalidate(HCkHttpW cHandle);
void CkHttpW_putIgnoreMustRevalidate(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getIgnoreNoCache(HCkHttpW cHandle);
void CkHttpW_putIgnoreNoCache(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getKeepEventLog(HCkHttpW cHandle);
void CkHttpW_putKeepEventLog(HCkHttpW cHandle, BOOL newVal);
long CkHttpW_getLMFactor(HCkHttpW cHandle);
void CkHttpW_putLMFactor(HCkHttpW cHandle, long newVal);
void CkHttpW_getLastContentType(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_getLastErrorHtml(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_getLastErrorText(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_getLastErrorXml(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_getLastHeader(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_getLastModDate(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_getLastResponseHeader(HCkHttpW cHandle, HCkStringW retval);
long CkHttpW_getLastStatus(HCkHttpW cHandle);
void CkHttpW_getLogin(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putLogin(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getLoginDomain(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putLoginDomain(HCkHttpW cHandle, const wchar_t *newVal);
long CkHttpW_getMaxConnections(HCkHttpW cHandle);
void CkHttpW_putMaxConnections(HCkHttpW cHandle, long newVal);
long CkHttpW_getMaxFreshPeriod(HCkHttpW cHandle);
void CkHttpW_putMaxFreshPeriod(HCkHttpW cHandle, long newVal);
unsigned long CkHttpW_getMaxResponseSize(HCkHttpW cHandle);
void CkHttpW_putMaxResponseSize(HCkHttpW cHandle, unsigned long newVal);
long CkHttpW_getMaxUrlLen(HCkHttpW cHandle);
void CkHttpW_putMaxUrlLen(HCkHttpW cHandle, long newVal);
BOOL CkHttpW_getMimicFireFox(HCkHttpW cHandle);
void CkHttpW_putMimicFireFox(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getMimicIE(HCkHttpW cHandle);
void CkHttpW_putMimicIE(HCkHttpW cHandle, BOOL newVal);
long CkHttpW_getMinFreshPeriod(HCkHttpW cHandle);
void CkHttpW_putMinFreshPeriod(HCkHttpW cHandle, long newVal);
BOOL CkHttpW_getNegotiateAuth(HCkHttpW cHandle);
void CkHttpW_putNegotiateAuth(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getNtlmAuth(HCkHttpW cHandle);
void CkHttpW_putNtlmAuth(HCkHttpW cHandle, BOOL newVal);
long CkHttpW_getNumCacheLevels(HCkHttpW cHandle);
void CkHttpW_putNumCacheLevels(HCkHttpW cHandle, long newVal);
long CkHttpW_getNumCacheRoots(HCkHttpW cHandle);
void CkHttpW_getPassword(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putPassword(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getProxyAuthMethod(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putProxyAuthMethod(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getProxyDomain(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putProxyDomain(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getProxyLogin(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putProxyLogin(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getProxyLoginDomain(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putProxyLoginDomain(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getProxyPassword(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putProxyPassword(HCkHttpW cHandle, const wchar_t *newVal);
long CkHttpW_getProxyPort(HCkHttpW cHandle);
void CkHttpW_putProxyPort(HCkHttpW cHandle, long newVal);
long CkHttpW_getReadTimeout(HCkHttpW cHandle);
void CkHttpW_putReadTimeout(HCkHttpW cHandle, long newVal);
void CkHttpW_getRedirectVerb(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putRedirectVerb(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getReferer(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putReferer(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getRequiredContentType(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putRequiredContentType(HCkHttpW cHandle, const wchar_t *newVal);
BOOL CkHttpW_getS3Ssl(HCkHttpW cHandle);
void CkHttpW_putS3Ssl(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getSaveCookies(HCkHttpW cHandle);
void CkHttpW_putSaveCookies(HCkHttpW cHandle, BOOL newVal);
int CkHttpW_getSendBufferSize(HCkHttpW cHandle);
void CkHttpW_putSendBufferSize(HCkHttpW cHandle, int newVal);
BOOL CkHttpW_getSendCookies(HCkHttpW cHandle);
void CkHttpW_putSendCookies(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getSessionLogFilename(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putSessionLogFilename(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getSocksHostname(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putSocksHostname(HCkHttpW cHandle, const wchar_t *newVal);
void CkHttpW_getSocksPassword(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putSocksPassword(HCkHttpW cHandle, const wchar_t *newVal);
int CkHttpW_getSocksPort(HCkHttpW cHandle);
void CkHttpW_putSocksPort(HCkHttpW cHandle, int newVal);
void CkHttpW_getSocksUsername(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putSocksUsername(HCkHttpW cHandle, const wchar_t *newVal);
int CkHttpW_getSocksVersion(HCkHttpW cHandle);
void CkHttpW_putSocksVersion(HCkHttpW cHandle, int newVal);
void CkHttpW_getSslProtocol(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putSslProtocol(HCkHttpW cHandle, const wchar_t *newVal);
BOOL CkHttpW_getUpdateCache(HCkHttpW cHandle);
void CkHttpW_putUpdateCache(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getUseBgThread(HCkHttpW cHandle);
void CkHttpW_putUseBgThread(HCkHttpW cHandle, BOOL newVal);
BOOL CkHttpW_getUseIEProxy(HCkHttpW cHandle);
void CkHttpW_putUseIEProxy(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getUserAgent(HCkHttpW cHandle, HCkStringW retval);
void CkHttpW_putUserAgent(HCkHttpW cHandle, const wchar_t *newVal);
BOOL CkHttpW_getVerboseLogging(HCkHttpW cHandle);
void CkHttpW_putVerboseLogging(HCkHttpW cHandle, BOOL newVal);
void CkHttpW_getVersion(HCkHttpW cHandle, HCkStringW retval);
BOOL CkHttpW_getWasRedirected(HCkHttpW cHandle);
void CkHttpW_AddCacheRoot(HCkHttpW cHandle, const wchar_t *dir);
BOOL CkHttpW_AddQuickHeader(HCkHttpW cHandle, const wchar_t *name, const wchar_t *value);
HCkHttpResponseW CkHttpW_BgResponseObject(HCkHttpW cHandle);
void CkHttpW_BgTaskAbort(HCkHttpW cHandle);
void CkHttpW_ClearBgEventLog(HCkHttpW cHandle);
void CkHttpW_ClearInMemoryCookies(HCkHttpW cHandle);
BOOL CkHttpW_CloseAllConnections(HCkHttpW cHandle);
BOOL CkHttpW_Download(HCkHttpW cHandle, const wchar_t *url, const wchar_t *filename);
BOOL CkHttpW_DownloadAppend(HCkHttpW cHandle, const wchar_t *url, const wchar_t *filename);
BOOL CkHttpW_DownloadHash(HCkHttpW cHandle, const wchar_t *url, const wchar_t *hashAlgorithm, const wchar_t *encoding, HCkStringW outStr);
BOOL CkHttpW_EventLogName(HCkHttpW cHandle, int index, HCkStringW outStr);
BOOL CkHttpW_EventLogValue(HCkHttpW cHandle, int index, HCkStringW outStr);
BOOL CkHttpW_ExtractMetaRefreshUrl(HCkHttpW cHandle, const wchar_t *html, HCkStringW outStr);
BOOL CkHttpW_GenTimeStamp(HCkHttpW cHandle, HCkStringW outStr);
BOOL CkHttpW_GetCacheRoot(HCkHttpW cHandle, int index, HCkStringW outStr);
BOOL CkHttpW_GetCookieXml(HCkHttpW cHandle, const wchar_t *domain, HCkStringW outStr);
BOOL CkHttpW_GetDomain(HCkHttpW cHandle, const wchar_t *url, HCkStringW outStr);
HCkHttpResponseW CkHttpW_GetHead(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_GetRequestHeader(HCkHttpW cHandle, const wchar_t *name, HCkStringW outStr);
HCkCertW CkHttpW_GetServerSslCert(HCkHttpW cHandle, const wchar_t *domain, int port);
BOOL CkHttpW_GetUrlPath(HCkHttpW cHandle, const wchar_t *url, HCkStringW outStr);
BOOL CkHttpW_HasRequestHeader(HCkHttpW cHandle, const wchar_t *name);
BOOL CkHttpW_IsUnlocked(HCkHttpW cHandle);
BOOL CkHttpW_PostBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteDataW byteData, const wchar_t *contentType, BOOL md5, BOOL gzip, HCkStringW outStr);
HCkHttpResponseW CkHttpW_PostJson(HCkHttpW cHandle, const wchar_t *url, const wchar_t *jsonText);
HCkHttpResponseW CkHttpW_PostMime(HCkHttpW cHandle, const wchar_t *url, const wchar_t *mime);
HCkHttpResponseW CkHttpW_PostUrlEncoded(HCkHttpW cHandle, const wchar_t *url, HCkHttpRequestW req);
HCkHttpResponseW CkHttpW_PostXml(HCkHttpW cHandle, const wchar_t *url, const wchar_t *xmlDoc, const wchar_t *charset);
BOOL CkHttpW_PutBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteDataW byteData, const wchar_t *contentType, BOOL md5, BOOL gzip, HCkStringW outStr);
BOOL CkHttpW_PutText(HCkHttpW cHandle, const wchar_t *url, const wchar_t *textData, const wchar_t *charset, const wchar_t *contentType, BOOL md5, BOOL gzip, HCkStringW outStr);
BOOL CkHttpW_QuickDeleteStr(HCkHttpW cHandle, const wchar_t *url, HCkStringW outStr);
BOOL CkHttpW_QuickGet(HCkHttpW cHandle, const wchar_t *url, HCkByteDataW outData);
HCkHttpResponseW CkHttpW_QuickGetObj(HCkHttpW cHandle, const wchar_t *url);
BOOL CkHttpW_QuickGetStr(HCkHttpW cHandle, const wchar_t *url, HCkStringW outStr);
BOOL CkHttpW_QuickPutStr(HCkHttpW cHandle, const wchar_t *url, HCkStringW outStr);
BOOL CkHttpW_RemoveQuickHeader(HCkHttpW cHandle, const wchar_t *name);
void CkHttpW_RemoveRequestHeader(HCkHttpW cHandle, const wchar_t *name);
BOOL CkHttpW_RenderGet(HCkHttpW cHandle, const wchar_t *url, HCkStringW outStr);
BOOL CkHttpW_ResumeDownload(HCkHttpW cHandle, const wchar_t *url, const wchar_t *filename);
BOOL CkHttpW_S3_CreateBucket(HCkHttpW cHandle, const wchar_t *bucketName);
BOOL CkHttpW_S3_DeleteBucket(HCkHttpW cHandle, const wchar_t *bucketName);
BOOL CkHttpW_S3_DeleteObject(HCkHttpW cHandle, const wchar_t *bucketName, const wchar_t *objectName);
BOOL CkHttpW_S3_DownloadBytes(HCkHttpW cHandle, const wchar_t *bucketName, const wchar_t *objectName, HCkByteDataW outBytes);
BOOL CkHttpW_S3_DownloadFile(HCkHttpW cHandle, const wchar_t *bucketName, const wchar_t *objectName, const wchar_t *localFilePath);
BOOL CkHttpW_S3_DownloadString(HCkHttpW cHandle, const wchar_t *bucketName, const wchar_t *objectName, const wchar_t *charset, HCkStringW outStr);
BOOL CkHttpW_S3_ListBucketObjects(HCkHttpW cHandle, const wchar_t *bucketName, HCkStringW outStr);
BOOL CkHttpW_S3_ListBuckets(HCkHttpW cHandle, HCkStringW outStr);
BOOL CkHttpW_S3_UploadBytes(HCkHttpW cHandle, HCkByteDataW objectContent, const wchar_t *contentType, const wchar_t *bucketName, const wchar_t *objectName);
BOOL CkHttpW_S3_UploadFile(HCkHttpW cHandle, const wchar_t *localFilePath, const wchar_t *contentType, const wchar_t *bucketName, const wchar_t *ObjectName);
BOOL CkHttpW_S3_UploadString(HCkHttpW cHandle, const wchar_t *objectContent, const wchar_t *charset, const wchar_t *contentType, const wchar_t *bucketName, const wchar_t *ObjectName);
BOOL CkHttpW_SaveLastError(HCkHttpW cHandle, const wchar_t *filename);
BOOL CkHttpW_SetCookieXml(HCkHttpW cHandle, const wchar_t *domain, const wchar_t *cookieXml);
void CkHttpW_SetRequestHeader(HCkHttpW cHandle, const wchar_t *name, const wchar_t *value);
BOOL CkHttpW_SetSslClientCert(HCkHttpW cHandle, HCkCertW cert);
BOOL CkHttpW_SetSslClientCertPem(HCkHttpW cHandle, const wchar_t *pemDataOrFilename, const wchar_t *pemPassword);
BOOL CkHttpW_SetSslClientCertPfx(HCkHttpW cHandle, const wchar_t *pfxFilename, const wchar_t *pfxPassword, const wchar_t *certSubjectCN);
void CkHttpW_SleepMs(HCkHttpW cHandle, int millisec);
HCkHttpResponseW CkHttpW_SynchronousRequest(HCkHttpW cHandle, const wchar_t *domain, long port, BOOL ssl, HCkHttpRequestW req);
BOOL CkHttpW_UnlockComponent(HCkHttpW cHandle, const wchar_t *unlockCode);
BOOL CkHttpW_UrlDecode(HCkHttpW cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkHttpW_UrlEncode(HCkHttpW cHandle, const wchar_t *str, HCkStringW outStr);
BOOL CkHttpW_XmlRpc(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn, HCkStringW outStr);
BOOL CkHttpW_XmlRpcPut(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn, HCkStringW outStr);
const wchar_t *CkHttpW__acceptCharset(HCkHttpW cHandle);
const wchar_t *CkHttpW__acceptLanguage(HCkHttpW cHandle);
const wchar_t *CkHttpW__awsAccessKey(HCkHttpW cHandle);
const wchar_t *CkHttpW__awsSecretKey(HCkHttpW cHandle);
const wchar_t *CkHttpW__awsSubResources(HCkHttpW cHandle);
const wchar_t *CkHttpW__bgLastErrorText(HCkHttpW cHandle);
const wchar_t *CkHttpW__bgResultString(HCkHttpW cHandle);
const wchar_t *CkHttpW__ck_accept(HCkHttpW cHandle);
const wchar_t *CkHttpW__clientIpAddress(HCkHttpW cHandle);
const wchar_t *CkHttpW__connection(HCkHttpW cHandle);
const wchar_t *CkHttpW__cookieDir(HCkHttpW cHandle);
const wchar_t *CkHttpW__debugLogFilePath(HCkHttpW cHandle);
const wchar_t *CkHttpW__downloadHash(HCkHttpW cHandle, const wchar_t *url, const wchar_t *hashAlgorithm, const wchar_t *encoding);
const wchar_t *CkHttpW__eventLogName(HCkHttpW cHandle, int index);
const wchar_t *CkHttpW__eventLogValue(HCkHttpW cHandle, int index);
const wchar_t *CkHttpW__extractMetaRefreshUrl(HCkHttpW cHandle, const wchar_t *html);
const wchar_t *CkHttpW__finalRedirectUrl(HCkHttpW cHandle);
const wchar_t *CkHttpW__genTimeStamp(HCkHttpW cHandle);
const wchar_t *CkHttpW__getCacheRoot(HCkHttpW cHandle, int index);
const wchar_t *CkHttpW__getCookieXml(HCkHttpW cHandle, const wchar_t *domain);
const wchar_t *CkHttpW__getDomain(HCkHttpW cHandle, const wchar_t *url);
const wchar_t *CkHttpW__getRequestHeader(HCkHttpW cHandle, const wchar_t *name);
const wchar_t *CkHttpW__getUrlPath(HCkHttpW cHandle, const wchar_t *url);
const wchar_t *CkHttpW__lastContentType(HCkHttpW cHandle);
const wchar_t *CkHttpW__lastErrorHtml(HCkHttpW cHandle);
const wchar_t *CkHttpW__lastErrorText(HCkHttpW cHandle);
const wchar_t *CkHttpW__lastErrorXml(HCkHttpW cHandle);
const wchar_t *CkHttpW__lastHeader(HCkHttpW cHandle);
const wchar_t *CkHttpW__lastModDate(HCkHttpW cHandle);
const wchar_t *CkHttpW__lastResponseHeader(HCkHttpW cHandle);
const wchar_t *CkHttpW__login(HCkHttpW cHandle);
const wchar_t *CkHttpW__loginDomain(HCkHttpW cHandle);
const wchar_t *CkHttpW__password(HCkHttpW cHandle);
const wchar_t *CkHttpW__postBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteDataW byteData, const wchar_t *contentType, BOOL md5, BOOL gzip);
const wchar_t *CkHttpW__proxyAuthMethod(HCkHttpW cHandle);
const wchar_t *CkHttpW__proxyDomain(HCkHttpW cHandle);
const wchar_t *CkHttpW__proxyLogin(HCkHttpW cHandle);
const wchar_t *CkHttpW__proxyLoginDomain(HCkHttpW cHandle);
const wchar_t *CkHttpW__proxyPassword(HCkHttpW cHandle);
const wchar_t *CkHttpW__putBinary(HCkHttpW cHandle, const wchar_t *url, HCkByteDataW byteData, const wchar_t *contentType, BOOL md5, BOOL gzip);
const wchar_t *CkHttpW__putText(HCkHttpW cHandle, const wchar_t *url, const wchar_t *textData, const wchar_t *charset, const wchar_t *contentType, BOOL md5, BOOL gzip);
const wchar_t *CkHttpW__quickDeleteStr(HCkHttpW cHandle, const wchar_t *url);
const wchar_t *CkHttpW__quickGetStr(HCkHttpW cHandle, const wchar_t *url);
const wchar_t *CkHttpW__quickPutStr(HCkHttpW cHandle, const wchar_t *url);
const wchar_t *CkHttpW__redirectVerb(HCkHttpW cHandle);
const wchar_t *CkHttpW__referer(HCkHttpW cHandle);
const wchar_t *CkHttpW__renderGet(HCkHttpW cHandle, const wchar_t *url);
const wchar_t *CkHttpW__requiredContentType(HCkHttpW cHandle);
const wchar_t *CkHttpW__s3_DownloadString(HCkHttpW cHandle, const wchar_t *bucketName, const wchar_t *objectName, const wchar_t *charset);
const wchar_t *CkHttpW__s3_ListBucketObjects(HCkHttpW cHandle, const wchar_t *bucketName);
const wchar_t *CkHttpW__s3_ListBuckets(HCkHttpW cHandle);
const wchar_t *CkHttpW__sessionLogFilename(HCkHttpW cHandle);
const wchar_t *CkHttpW__socksHostname(HCkHttpW cHandle);
const wchar_t *CkHttpW__socksPassword(HCkHttpW cHandle);
const wchar_t *CkHttpW__socksUsername(HCkHttpW cHandle);
const wchar_t *CkHttpW__sslProtocol(HCkHttpW cHandle);
const wchar_t *CkHttpW__urlDecode(HCkHttpW cHandle, const wchar_t *str);
const wchar_t *CkHttpW__urlEncode(HCkHttpW cHandle, const wchar_t *str);
const wchar_t *CkHttpW__userAgent(HCkHttpW cHandle);
const wchar_t *CkHttpW__version(HCkHttpW cHandle);
const wchar_t *CkHttpW__xmlRpc(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn);
const wchar_t *CkHttpW__xmlRpcPut(HCkHttpW cHandle, const wchar_t *urlEndpoint, const wchar_t *xmlIn);
#endif
